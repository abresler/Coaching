115/12
75/12
113.5/12
42
42/12
64.5/12
25.5/12
78/12
25.5/12
library(RPostgreSQL)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, user = "biomass_stats", dbname = "biomass", #
                 host = "scctest.nrel.gov", port = 6432)
?dbConnect
con <- dbConnect(drv, user = "biomass_stats", dbname = "biomass", #
                 host = "scctest.nrel.gov", port = 6432, pwd = "st@ts99!")
con <- dbConnect(drv, user = "biomass_stats", dbname = "biomass", #
                 host = "scctest.nrel.gov", port = 6432, pass = "st@ts99!")
summary(con)
query <- 'select#
          *#
          from#
          vial_result#
          limit 10#
          '
rs <- dbSendQuery(con, outputs.query)#
outputs.df <- fetch(rs, n = -1)
rs <- dbSendQuery(con, query)#
outputs.df <- fetch(rs, n = -1)
dbListTables(con)
query <- 'select#
          *#
          from#
          "vial_result"#
          limit 10#
          '#
# var <- c("\'an ethanol variable\'", #
#        "\'OIM.displacing_petroleum\'", "\'C_to_RR.NPV_rel_to_a_million_C\'",#
#        "\'C_to_RR.NPV_rel_to_a_million_P\'")#
# #
# outputs.query = 'select#
#                 *#
#                 from#
#                 \"model_ff\".\"outputs\"#
#                 where  #
#                 \"Run\" >= 40049#
#                 and \"Run\" < 40099#
#                 and \"Variable Name\" = #
#                '#
#
rs <- dbSendQuery(con, query)#
outputs.df <- fetch(rs, n = -1)
query <- 'select#
          *#
          from#
          \"vial_result\"#
          limit 10#
          '
rs <- dbSendQuery(con, query)#
outputs.df <- fetch(rs, n = -1)
dbExistsTable(con, "vial_result")
dbExistsTable(con, "vial")
dbExistsTable(con, vial)
dbExistsTable(con, "lignin")
summary(con)
query <- 'select#
          *#
          from#
          \"mbms\".\"vial_result\"#
          limit 10#
          '
rs <- dbSendQuery(con, query)#
outputs.df <- fetch(rs, n = -1)
outputs.df
?output
?results
.project.path <- "~/Projects/DataMiningLDRD/ldrd-data-code/Ryan/Task1/"#
load(paste(.project.path, "data/clusters2.RData", sep = ""))#
#
test <- unlist(lapply(acf.clusters.spline.5, function(x) return(x[5, 2])))#
hist(test, freq = F)#
#
library(plyr)
.h(results)
.h(results.list)
ls9)
ls()
.project.path <- "~/Projects/HPCLDRD/"
rack.10.new <- read.csv(paste(.project.path, "data/172.17.10.249-0331.sensor.log.csv", #
                        sep = ""), head = T)
.h(rack.10.new)
.project.path <- "~/Projects/DataMiningLDRD/ldrd-data-code/Ryan/Task1/"#
#
# load data#
load(paste(.project.path, "data/2013-02-05-GPreturnData2000.RData", sep = ""))#
load(paste(.project.path, "data/eric.RData", sep = ""))#
load(paste(.project.path, "data/missingIndex.RData", sep = ""))
ls()
.h(inducedMissing)
.h(missingVectors)
.h(udms.sub)
apply(udms.sub, 2, function(x) sum(is.na(x)))
apply(missingVectors, 2, function(x) sum(is.na(x)))
.project.path <- "~/Projects/DataMiningLDRD/ldrd-data-code/Ryan/Task1/"
load(paste(.project.path, "danny.RData", sep = ""))
load(paste(.project.path, "data/danny.RData", sep = ""))
ls()
library(Amelia)
?missmap
missmap(missingVectors, tsvar = "Timestamp")
missmap
missVect.am <- amelia(missingVectors, ts = "Timestamp")
quart()
quartz()
missmap(missVect.am)
?amelia
missmap
missmap(missingVectors, y.at = missingVectors$Timestamp)
missmap(missingVectors[1:15, ], y.at = missingVectors$Timestamp)
missingVectors[1:5, 1:5]
missmap(missingVectors[, 2:16 ], y.at = missingVectors$Timestamp)
missmap(missingVectors[, 2:16 ], #
        y.at = missingVectors$Timestamp,#
        y.labels = missingVectors$Timestamp)
missVect.am <- amelia(missingVectors, ts = missingVectors$Timestamp)
str(missVect.am)
?attach
.project.path <- "~/Projects/DataMiningLDRD/ldrd-data-code/Ryan/Task1/"
load(paste(.project.path, "data/danny.RData", sep = ""))
ls()
.my.ls
.my.ls()
.project.path <- "~/Projects/DataMiningLDRD/ldrd-data-code/Ryan/Task1/"
attach(paste(.project.path, "data/danny.RData", sep = ""))
ls()
.my.ls()
search.path()
?attach
search()
.h(udms.sub)
4000*26
4000*26/12
4000*26/12*36
4000*26/12*36/60
.0125*5200
.0125*5200*3
.003*4200
.0125*5200*5
.0125*6200*5
.0125*8200*5
.0125*10000*10
200*12
200*12*20
.project.path <- "~/Projects/DataMiningLDRD/ldrd-data-code/Ryan/Task1/"#
load(paste(.project.path, "data/danny.RData", sep = ""))#
#
library(Amelia)#
#
missVect.am <- amelia(missingVectors, ts = missingVectors$Timestamp)#
#
missmap(missingVectors[, 2:16 ], #
        y.at = missingVectors$Timestamp,#
        y.labels = missingVectors$Timestamp)
missmap(missingVectors[, 2:16 ], #
        y.at = missingVectors$Timestamp)
missmap(missingVectors, ts = 1,#
        y.at = missingVectors$Timestamp)
missmap(missingVectors[, 2:16], ts = missingVectors$Timestamp,#
        y.at = missingVectors$Timestamp)
?missmap
missmap(missingVectors[, 2:16], ts = missingVectors$Timestamp,#
        y.at = missingVectors$Timestamp, rank.order = F)
missmap
.h(missingVectors)
missingVectors[1, ]
4*24*7
missingVectors[673, ]
missingVectors[674, ]
missingVectors[(1:4)*673, ]
missingVectors[(0:3)*673, ]
missingVectors[(0:3)*672 + 1, ]
missingVectors[(0:4)*672 + 1, ]
missmap(missingVectors[, 2:16], ts = missingVectors$Timestamp,#
        y.at = (0:3)*672 + 1, rank.order = F)
missmap(missingVectors[, 2:16], #
        ts = missingVectors$Timestamp,#
        y.labels = c("t", "y", "z", "x"), #
        y.at = (0:3)*672 + 1, #
        rank.order = F)
missmap(missingVectors[, 2:16], #
        ts = missingVectors$Timestamp,#
        y.labels = c("May 01", "May 08", "May 15", "May 22"), #
        y.at = (0:3)*672 + 1, #
        rank.order = F)
missmap(missingVectors[, 2:16], #
        ts = missingVectors$Timestamp,#
        y.labels = c("May 01", "May 08", "May 15", "May 22"), #
        y.at = (0:3)*672 + 1, #
        rank.order = F, #
        col = c("red", "navy"))
missmap(missingVectors[, 2:16], #
        ts = missingVectors$Timestamp,#
        y.labels = c("May 01", "May 08", "May 15", "May 22"), #
        y.at = (0:3)*672 + 1, #
        rank.order = F, #
        col = c("white", "lightblue"))
missmap(udms.sub[, 2:16], #
        ts = missingVectors$Timestamp,#
        y.labels = c("May 01", "May 08", "May 15", "May 22"), #
        y.at = (0:3)*672 + 1, #
        rank.order = F, #
        col = c("white", "lightblue"))
quartz()
missmap(missingVectors[, 2:16], #
        ts = missingVectors$Timestamp,#
        y.labels = c("May 01", "May 08", "May 15", "May 22"), #
        y.at = (0:3)*672 + 1, #
        rank.order = F, #
        col = c("white", "lightblue"))
abline(h = (0:3)*672 + 1, lty = 3, col = "lightgray")
missmap(udms.sub[, 2:16], #
        ts = missingVectors$Timestamp,#
        y.labels = c("May 01", "May 08", "May 15", "May 22"), #
        y.at = (0:3)*672 + 1, #
        rank.order = F, #
        col = c("white", "navy"))
missmap(udms.sub[, 2:16], #
        ts = missingVectors$Timestamp,#
        y.labels = c("May 01", "May 08", "May 15", "May 22"), #
        y.at = (0:3)*672 + 1, #
        rank.order = F, #
        col = c("lightgray", "lightblue"))
missmap(udms.sub[, 2:16], #
        ts = missingVectors$Timestamp,#
        y.labels = c("May 01", "May 08", "May 15", "May 22"), #
        y.at = (0:3)*672 + 1, #
        rank.order = F, #
        col = c("white", "lightblue"))
pdf(paste(.project.path, "fig/missing_original.pdf"), w = 7, h = 7)#
missmap(udms.sub[, 2:16], #
        ts = missingVectors$Timestamp,#
        y.labels = c("May 01", "May 08", "May 15", "May 22"), #
        y.at = (0:3)*672 + 1, #
        rank.order = F, #
        col = c("white", "lightblue"))
pdf(paste(.project.path, "fig/missing_original.pdf", sep = ""), w = 7, h = 7)#
missmap(udms.sub[, 2:16], #
        ts = missingVectors$Timestamp,#
        y.labels = c("May 01", "May 08", "May 15", "May 22"), #
        y.at = (0:3)*672 + 1, #
        rank.order = F, #
        col = c("white", "lightblue"))
dev.off()
pdf(paste(.project.path, "fig/missing_induce.pdf", sep = ""), w = 7, h = 7)#
missmap(missingVectors[, 2:16], #
        ts = missingVectors$Timestamp,#
        y.labels = c("May 01", "May 08", "May 15", "May 22"), #
        y.at = (0:3)*672 + 1, #
        rank.order = F, #
        col = c("white", "lightblue"))
dev.off()
f <- rnorm(50)
base::source("/tmp/r-plugin-relmore/Rsource-41227-tutorial.R")
q()
base::source("/tmp/r-plugin-relmore/Rsource-41227-tutorial.R")
getDatabusData <- function(query, url = .base.url, user = "relmore",#
                           key = .api.key.bacnet, #
                           session = getCurlHandle()) {#
  curl.opts <- list(userpwd = paste(user, ":", key, sep = ""), #
                    httpheader = "Content-Type: application/json",#
                    verbose = T)#
  # r = dynCurlReader()#
  request <- paste(url, query, sep = "")#
  tmp <- getURL(url = request, curl = session, .opts = curl.opts)#
  return(tmp)#
}
library(RCurl)
??basicTextGatherer
?basicTextGatherer
?httr
??httr
?GET
library(httr)
?GET
b <- new_bin()#
GET(b)#
GET(b, add_headers(a = 1, b = 2))
?new_bin
GET(b, add_headers(a = 1, b = 2))
b <- new_bin()
GET(b, add_headers(a = 1, b = 2))
GET(b)
GET(b, set_cookies(a = 1, b = 2))#
GET(b, authenticate("username", "password"))
result <- GET(url = "https://databus.nrel.gov/getdata/select+*+from+bacnetdeviceMeta",#
              config = list(authenticate("relmore", "register:13101907459:b2:7204986498058761403"),#
              verbose(),#
              add_headers("Content-Type: application/json")))
result
GET("http://had.co.nz", c(verbose(), add_headers(Accept = "")))
request <- paste(.base.url, q, sep = "")#
print(request)#
curlPerform(url = request, writefunction = r$update, curl = session, #
            .opts = curl.opts)
.project.path <- "/Users/relmore/Side_Projects/Sports/NBA/Coaching/"#
#
## Dependencies:#
source(paste(.project.path, "src/load.R", sep=""))
full.url <- "../html/gameDetail.html"#
doc <- htmlTreeParse(full.url, useInternalNodes=T)
library(XML)
full.url <- "../html/gameDetail.html"#
doc <- htmlTreeParse(full.url, useInternalNodes=T)
str(doc)
tables <- readHTMLTable(doc)
str(tables)
doc <- htmlTreeParse(full.url, useInternalNodes=T)#
tables <- readHTMLTable(doc)
tables
str(tables)
dim(tables)
length(tables)
tables[[96]]
tables[[91]]
tables[[92]]
qq <- tables[[95]]
str(qq)
qq[, 2]
